<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <!--#region Color Black-->
    <SolidColorBrush x:Key="ColorBlack" Color="#000000"/>
    <!--#endregion-->
    
    <!--#region Color Gey -->
    <SolidColorBrush x:Key="ColorQuickSilver" Color="#c2c2c2"/>
    <!--#endregion-->
    
    <!--#region Color Blood Red-->
    <SolidColorBrush x:Key="ColorBloodRed" Color="#520700"/>
    <!--#endregion-->
    
    <!--#region Color Middle Yellow Red-->
    <SolidColorBrush x:Key="ColorMiddleYellowRed" Color="#E2B179"/>
    <!--#endregion-->
    
    <!--#region Color Davys Grey Mause over for Color Sonic Silver-->
    <SolidColorBrush x:Key="MauseOverOrClickforQuickSilver" Color="#474747"/>
    <!--#endregion-->
    
    <!--#region Color Dark Sienna Maouse Over for Color Blood Red-->
    <SolidColorBrush x:Key="MaouseOverOrClickForBloodRed" Color="#290300"/>
    <!--#endregion-->
    
    <!--#region Style StandardBorder-->
    <Style x:Key="StandardBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="2.5"/>
        <Setter Property="Background" Value="{StaticResource ColorMiddleYellowRed}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColorBlack}"/>
        <Setter Property="BorderThickness" Value="4"/>
    </Style>
    <!--#endregion-->

    <!--#region Style GrayBackBorder-->
    <Style x:Key="GrayBackBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Margin" Value="2,25,2,2"/>
        <Setter Property="Background" Value="{StaticResource ColorBloodRed}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColorBlack}"/>
        <Setter Property="BorderThickness" Value="4"/>
    </Style>
    <!--#endregion-->
    <!--#region Style StandardTextBlock-->
    <Style x:Key="StandardTextBlock" TargetType="TextBlock" >
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="century gothic" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="TextDecorations" Value="UnderLine"/>
    </Style>
    <!--#endregion-->
    <!--#region Style StandardButton-->
    <Style x:Key="StyleStandardButton" TargetType="Button">
        <Setter Property="FontFamily" Value="century gothic" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="{StaticResource ColorQuickSilver}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColorBlack}"/>
        <Setter Property="Template" Value="{DynamicResource ButtonRounedEdge}"/>
    </Style>
    <!--#region Style BigButton-->
    <Style x:Key="StyleBigButton" TargetType="Button">
        <Setter Property="FontFamily" Value="century gothic" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="{StaticResource ColorQuickSilver}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColorBlack}"/>
        <Setter Property="Template" Value="{DynamicResource BigButton}"/>
    </Style>
    <!--#endregion-->
    <!--#endregion-->
    <!--#region Style StandardButton-->
    <Style x:Key="StyleCounterButton" TargetType="Button">
        <Setter Property="FontFamily" Value="century gothic" />
        
        <Setter Property="Background" Value="{StaticResource ColorQuickSilver}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColorBlack}"/>
        <Setter Property="Template" Value="{DynamicResource ButtonRounedEdge}"/>
    </Style>
    <!--#endregion-->
    <!--#region Style StandardTextBox-->
    <Style x:Key="StandardTextBox" TargetType="TextBox">
        
        <Setter Property="BorderBrush" Value="{StaticResource ColorBlack}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{StaticResource ColorQuickSilver}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Template" Value="{DynamicResource TextBoxRounded}"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="century gothic" />
        <Setter Property="Margin" Value="1"/>
        
    </Style>
    <!--#endregion -->

    <!--#region TextBox Template-->
    <ControlTemplate x:Key="TextBoxRounded" TargetType="{x:Type TextBoxBase}">
        <Border x:Name="border" CornerRadius="10" Background="{StaticResource ColorQuickSilver}" BorderThickness="2" BorderBrush="{StaticResource ColorBlack}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ColorBlack}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->
    
    
    
    <!--#region Style StandardComboBox-->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        

        <Setter Property="Template">
            <Setter.Value>
            <!--#region MainBox-->
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <!--Border of main box-->
                    <Border x:Name="templateRoot" CornerRadius="10" Background="{StaticResource ColorQuickSilver}" BorderThickness="2"  BorderBrush="{StaticResource ColorBlack}" SnapsToDevicePixels="true">
                        <!--Border of arrow-->
                        <Border x:Name="splitBorder" BorderThickness="2" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <!--Draws the arrow-->
                            <Path x:Name="arrow" Data="M16 20 L16 24 L32 48 L48 24 L48 20 L44 16 S32 4 20 16 Z" Fill="{StaticResource ColorBloodRed}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Uniform"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource MaouseOverOrClickForBloodRed}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MauseOverOrClickforQuickSilver}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ColorBlack}"/>
                        </MultiDataTrigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource MaouseOverOrClickForBloodRed}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MauseOverOrClickforQuickSilver}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ColorBlack}"/>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            <!--#endregion-->
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxCustom" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--something to do with dropdown-->
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">

                <!--The Border of the ComboBoxItems-->
                <Border x:Name="dropDownBorder" CornerRadius="10" Background="{StaticResource ColorQuickSilver}" BorderThickness="1" BorderBrush="{StaticResource ColorBlack}"  MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <!--Lets User Scroll the dropdown list-->
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <!--ComboBox Items-->
                        <Grid x:Name="grid">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>

            </Popup>

            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <!--Display chosen item in main box-->
            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>

    </ControlTemplate>
    <!--#endregion-->
    
    
    <!--#region StandardButton template-->
    <ControlTemplate x:Key="ButtonRounedEdge" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{StaticResource ColorQuickSilver}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ColorBlack}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource MauseOverOrClickforQuickSilver}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ColorBlack}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#D6D6D6"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ColorBlack}"/>
            </Trigger>
        
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->
    <!--#region BigButton template-->
    <ControlTemplate x:Key="BigButton" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{StaticResource ColorQuickSilver}" CornerRadius="250" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ColorBlack}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource MauseOverOrClickforQuickSilver}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ColorBlack}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#D6D6D6"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ColorBlack}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->



</ResourceDictionary>
 